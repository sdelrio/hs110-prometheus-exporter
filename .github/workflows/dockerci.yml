name: Docker CI and image publish

on:
  push:
    branches:
      - master

    tags:
      - v*

  pull_request:

env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  COMPOSE_INTERACTIVE_NO_CLI: 1  ## fixes the input device is not a TTY on docker compose
  DOCKER_BUILDKIT: 1
  DOCKER_USER: ${{ github.actor }}
  DOCKER_PASS: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pullrequest:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:

      - uses: actions/checkout@v2

      - name: Prepare qemu for armbuilds on docker
        run: make qemu-arm-linux

      - name: Build test image and run tests
        run: make test-image

  push:
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Prepare qemu for armbuilds on docker
        run: make qemu-arm-linux

      - name: Build test image and run tests
        run: make test-image

      - name: Build all images
        run: make build-images

      - name: Log into registry
        run: echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          IMAGE_TAG=$VERSION make publish-images
