name: Master branch

on:
  push:
    branches:
      - master

jobs:
  push:
    env:
      COMPOSE_DOCKER_CLI_BUILD: 0
      COMPOSE_INTERACTIVE_NO_CLI: 1  ## fixes the input device is not a TTY on docker compose
      DOCKER_BUILDKIT: 0
      DOCKERGPR_USER: ${{ github.actor }}
      DOCKERGPR_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_USER: ${{ github.actor }}
      DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(git rev-parse --short HEAD)
          IMAGE="sdelrio/hs110-exporter"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Build test image and run tests
        run: make test-image-gpr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # - name: Build all images using GPR cache layer
      #   run: make build-images-gpr

      - name: Log into registry
        run: echo "$DOCKERHUB_PASS" | docker login -u $DOCKERHUB_USER --password-stdin

      # - name: Push image
      #   run: make build-push

      - name: Set TAG env
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          file: Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Trigger new Operation-Resource actions for Deployment
        run: |
          commitMsg=$(git log --format=%B -n 1 ${{ github.event.after }} --pretty=oneline --abbrev-commit)
          branchName="${GITHUB_REF##*/}"
          echo "TAG=${{ env.TAG }}"
          echo "commitMsg: $commitMsg"
          echo "branchName: $branchName"
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.OPERATION_RESOURCE_REPOSITORY_ACCESS_TOKEN }}" \
          https://api.github.com/repos/sdelrio/gitops-hs110/dispatches \
          --data \
          '
          {
            "event_type": "product",
            "client_payload": {
              "action": "distribute",
              "commitmsg": "'"$commitMsg"'",
              "dirName": "hs110-exporter",
              "newTag": "'"${{ env.TAG }}"'",
              "baseRef":"'"$branchName"'"
            }
          }'

