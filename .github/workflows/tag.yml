name: Tag CI

on:
  push:
    tags:
      - v*


jobs:
  push:
    env:
      COMPOSE_DOCKER_CLI_BUILD: 0
      COMPOSE_INTERACTIVE_NO_CLI: 1  ## fixes the input device is not a TTY on docker compose
      DOCKER_BUILDKIT: 0
      DOCKERGPR_USER: ${{ github.actor }}
      DOCKERGPR_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_USER: ${{ github.actor }}
      DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build test image and run tests
        run: make test-image-gpr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build all images using GPR cache layer
        run: make build-images-gpr

      - name: Log into registry
        run: echo "$DOCKERHUB_PASS" | docker login -u $DOCKERHUB_USER --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          IMAGE_TAG=$VERSION make build-push
          echo "TAG=$VERSION" >> $GITHUB_ENV

      - name: Trigger new Operation-Resource actions for Deployment
        run: |
          commitMsg=$(git log --format=%B -n 1 ${{ github.event.after }} --pretty=oneline --abbrev-commit)
          branchName="master"
          echo "TAG=${{ env.TAG }}"
          echo "commitMsg: $commitMsg"
          echo "branchName: $branchName"
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.OPERATION_RESOURCE_REPOSITORY_ACCESS_TOKEN }}" \
          https://api.github.com/repos/sdelrio/gitops-hs110/dispatches \
          --data \
          '
          {
            "event_type": "product",
            "client_payload": {
              "action": "distribute",
              "commitmsg": "'"$commitMsg"'",
              "dirName": "hs110-exporter",
              "newTag": "'"${{ env.TAG }}"'",
              "baseRef":"'"$branchName"'"
            }
          }'


